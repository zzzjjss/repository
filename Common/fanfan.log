DEBUG main org.hibernate.jdbc.AbstractBatcher - closing statement
DEBUG main org.hibernate.loader.Loader - total objects hydrated: 1
DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG main org.hibernate.loader.Loader - done entity load
DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Not closing pre-bound Hibernate Session after HibernateTemplate
DEBUG main org.springframework.transaction.interceptor.TransactionInterceptor - Completing transaction for [com.uf.fanfan.service.impl.ShopManagerServiceImpl.findShopById]
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Triggering beforeCommit synchronization
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Triggering beforeCompletion synchronization
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1efc208]
DEBUG main org.hibernate.transaction.JDBCTransaction - commit
DEBUG main org.hibernate.impl.SessionImpl - automatically flushing session
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - flushing session
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.pretty.Printer - listing entities:
DEBUG main org.hibernate.pretty.Printer - com.uf.fanfan.entity.Shop{id=0, name=fanfan}
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - executing flush
DEBUG main org.hibernate.jdbc.ConnectionManager - registering flush begin
DEBUG main org.hibernate.jdbc.ConnectionManager - registering flush end
DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - post flush
DEBUG main org.hibernate.jdbc.JDBCContext - before transaction completion
DEBUG main org.hibernate.impl.SessionImpl - before transaction completion
DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG main org.hibernate.jdbc.JDBCContext - after transaction completion
DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG main org.hibernate.impl.SessionImpl - after transaction completion
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Triggering afterCommit synchronization
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Triggering afterCompletion synchronization
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Clearing transaction synchronization
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Removed value [org.springframework.orm.hibernate3.SessionHolder@a22671] for key [org.hibernate.impl.SessionFactoryImpl@180b22e] from thread [main]
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@1a73d30] for key [org.apache.commons.dbcp.BasicDataSource@1add463] from thread [main]
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1efc208] after transaction
DEBUG main org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG main org.hibernate.impl.SessionImpl - closing session
DEBUG main org.hibernate.jdbc.ConnectionManager - performing cleanup
DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG main org.hibernate.jdbc.JDBCContext - after transaction completion
DEBUG main org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG main org.hibernate.impl.SessionImpl - after transaction completion
