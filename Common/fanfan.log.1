DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
DEBUG main org.springframework.core.io.support.SpringFactoriesLoader - Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'advisorAdapterRegistry' of type [org.springframework.aop.framework.adapter.AdvisorAdapterRegistry]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'applyCommonInterceptorsFirst' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'customTargetSourceCreators' of type [[Lorg.springframework.aop.framework.autoproxy.TargetSourceCreator;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'exposeProxy' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'frozen' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'interceptorNames' of type [[Ljava.lang.String;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'opaque' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'optimize' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'proxyClassLoader' of type [java.lang.ClassLoader]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'proxyTargetClass' of type [boolean]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@178460d]
DEBUG main org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@419d05]
INFO main org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17e121c: defining beans [shopManagerService,tradeService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,productDao,shopDao,myDataSource,sessionFactory,transactionManager,hibernateTemplate,org.springframework.aop.config.internalAutoProxyCreator,txMethods,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,txAdvice,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'shopManagerService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'shopManagerService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'advice' of type [org.aopalliance.aop.Advice]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'adviceBeanName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'perInstance' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'pointcut' of type [org.springframework.aop.Pointcut]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'txMethods'
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.aop.aspectj.AspectJExpressionPointcut]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.aop.aspectj.AspectJExpressionPointcut]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'classFilter' of type [org.springframework.aop.ClassFilter]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'expression' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'location' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'methodMatcher' of type [org.springframework.aop.MethodMatcher]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'parameterNames' of type [[Ljava.lang.String;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'parameterTypes' of type [[Ljava.lang.Class;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'pointcutDeclarationScope' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'pointcutExpression' of type [org.aspectj.weaver.tools.PointcutExpression]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'runtime' of type [boolean]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'txMethods'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.uf.fanfan.service.impl.ShopManagerServiceImpl]: AutowiredFieldElement for private com.uf.fanfan.dao.ShopDao com.uf.fanfan.service.impl.ShopManagerServiceImpl.shopDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'shopManagerService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [com.uf.fanfan.service.impl.ShopManagerServiceImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [com.uf.fanfan.service.impl.ShopManagerServiceImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'shopManagerService': AutowiredFieldElement for private com.uf.fanfan.dao.ShopDao com.uf.fanfan.service.impl.ShopManagerServiceImpl.shopDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'shopDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'shopDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.uf.fanfan.dao.impl.ShopDaoImpl]: AutowiredFieldElement for private org.springframework.orm.hibernate3.HibernateTemplate com.uf.fanfan.dao.impl.CommonDaoImpl.hibernateTemplate
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'shopDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [com.uf.fanfan.dao.impl.ShopDaoImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [com.uf.fanfan.dao.impl.ShopDaoImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'hibernateTemplate' of type [org.springframework.orm.hibernate3.HibernateTemplate]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'shopDao': AutowiredFieldElement for private org.springframework.orm.hibernate3.HibernateTemplate com.uf.fanfan.dao.impl.CommonDaoImpl.hibernateTemplate
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'hibernateTemplate' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.hibernate3.HibernateTemplate]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.hibernate3.HibernateTemplate]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'allowCreate' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'alwaysUseNewSession' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'cacheQueries' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'checkWriteOperations' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'entityInterceptor' of type [org.hibernate.Interceptor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'entityInterceptorBeanName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'exposeNativeSession' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'fetchSize' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'filterName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'filterNames' of type [[Ljava.lang.String;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'flushMode' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'flushModeName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'jdbcExceptionTranslator' of type [org.springframework.jdbc.support.SQLExceptionTranslator]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'maxResults' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'queryCacheRegion' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'sessionFactory' of type [org.hibernate.SessionFactory]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'cacheRegionFactory' of type [org.hibernate.cache.RegionFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'cacheableMappingLocations' of type [[Lorg.springframework.core.io.Resource;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'collectionCacheStrategies' of type [java.util.Properties]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'configLocation' of type [org.springframework.core.io.Resource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'configLocations' of type [[Lorg.springframework.core.io.Resource;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'configuration' of type [org.hibernate.cfg.Configuration]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'configurationClass' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'entityCacheStrategies' of type [java.util.Properties]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'entityInterceptor' of type [org.hibernate.Interceptor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'eventListeners' of type [java.util.Map]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'exposeTransactionAwareSessionFactory' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'filterDefinitions' of type [[Lorg.hibernate.engine.FilterDefinition;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'hibernateProperties' of type [java.util.Properties]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'jdbcExceptionTranslator' of type [org.springframework.jdbc.support.SQLExceptionTranslator]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'jtaTransactionManager' of type [javax.transaction.TransactionManager]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'lobHandler' of type [org.springframework.jdbc.support.lob.LobHandler]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'mappingDirectoryLocations' of type [[Lorg.springframework.core.io.Resource;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'mappingJarLocations' of type [[Lorg.springframework.core.io.Resource;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'mappingLocations' of type [[Lorg.springframework.core.io.Resource;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'mappingResources' of type [[Ljava.lang.String;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'namingStrategy' of type [org.hibernate.cfg.NamingStrategy]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'object' of type [org.hibernate.SessionFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'objectType' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'schemaUpdate' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'singleton' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'typeDefinitions' of type [[Lorg.springframework.orm.hibernate3.TypeDefinitionBean;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'useTransactionAwareDataSource' of type [boolean]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'myDataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'myDataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'myDataSource' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.apache.commons.dbcp.BasicDataSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.apache.commons.dbcp.BasicDataSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'accessToUnderlyingConnectionAllowed' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'closed' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'connection' of type [java.sql.Connection]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'connectionInitSqls' of type [java.util.Collection]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'connectionProperties' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'defaultAutoCommit' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'defaultCatalog' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'defaultReadOnly' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'defaultTransactionIsolation' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'driverClassLoader' of type [java.lang.ClassLoader]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'driverClassName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'initialSize' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'logAbandoned' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'logWriter' of type [java.io.PrintWriter]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'loginTimeout' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'maxActive' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'maxIdle' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'maxOpenPreparedStatements' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'maxWait' of type [long]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'minEvictableIdleTimeMillis' of type [long]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'minIdle' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'numActive' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'numIdle' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'numTestsPerEvictionRun' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'password' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'poolPreparedStatements' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'removeAbandoned' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'removeAbandonedTimeout' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'testOnBorrow' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'testOnReturn' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'testWhileIdle' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'timeBetweenEvictionRunsMillis' of type [long]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'url' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'username' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'validationQuery' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'validationQueryTimeout' of type [int]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'myDataSource'
DEBUG main org.springframework.beans.TypeConverterDelegate - Converting String to [class java.util.Properties] using property editor [org.springframework.beans.propertyeditors.PropertiesEditor@7cd37a]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@b32ed4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@b32ed4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b32ed4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1568fb5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dccedd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@a4488
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@70be88
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@70be88
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70be88
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@9a9b65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@9a9b65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9a9b65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1712651
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1712651
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1712651
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@f07355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@f07355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f07355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@15983b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@15983b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@15983b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6835fb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6835fb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6835fb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f892a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f892a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f892a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10efd7c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10efd7c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@988707
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@988707
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1ab11b0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ab11b0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@52c6b4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52c6b4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@b0a3f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b0a3f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1ac5f13
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ac5f13
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1493102
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1493102
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1493102
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ee1ede
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1236cd5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1236cd5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1236cd5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e41bc3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1922f46
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1922f46
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e2670b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e2670b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@147358f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147358f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@ded0f0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ded0f0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@da90c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@da90c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@124111a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@93df2c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3a1834
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3a1834
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3a1834
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f729e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f729e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f729e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@671f95
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1754699
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1754699
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1754699
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68cb6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68cb6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68cb6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@dada24
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1f31652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f31652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11ef443
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@94af2f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@e34726
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e34726
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46d228
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@e99681
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1be4777
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1d32e45
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@a53de4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a53de4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f0b7d3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b4be3d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@35bb0f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e4245
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20fa83
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11eb199
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1de498
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8ae45a
INFO main org.hibernate.annotations.common.Version - Hibernate Commons Annotations 3.2.0.Final
INFO main org.hibernate.cfg.Environment - Hibernate 3.6.10.Final
INFO main org.hibernate.cfg.Environment - hibernate.properties not found
INFO main org.hibernate.cfg.Environment - Bytecode provider name : javassist
INFO main org.hibernate.cfg.Environment - using JDK 1.4 java.sql.Timestamp handling
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
DEBUG main org.hibernate.cfg.EJB3DTDEntityResolver - Resolving XML entity -//Hibernate/Hibernate Mapping DTD 3.0//EN : http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd
DEBUG main org.hibernate.util.DTDEntityResolver - trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
DEBUG main org.hibernate.util.DTDEntityResolver - recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
DEBUG main org.hibernate.util.DTDEntityResolver - located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
DEBUG main org.hibernate.cfg.Configuration - Starting secondPassCompile() processing
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
INFO main org.hibernate.cfg.HbmBinder - Mapping class: com.uf.fanfan.entity.Shop -> SHOP
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: id -> id
DEBUG main org.hibernate.cfg.HbmBinder - Mapped property: name -> name
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - processing extends queue
DEBUG main org.hibernate.cfg.Configuration - processing extends queue
DEBUG main org.hibernate.cfg.Configuration - processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - processing association property references
DEBUG main org.hibernate.cfg.Configuration - processing foreign key constraints
INFO main org.hibernate.cfg.Configuration - Hibernate Validator not found: ignoring
INFO main org.springframework.orm.hibernate3.LocalSessionFactoryBean - Building new Hibernate SessionFactory
DEBUG main org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
DEBUG main org.hibernate.cfg.Configuration - Starting secondPassCompile() processing
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - processing extends queue
DEBUG main org.hibernate.cfg.Configuration - processing extends queue
DEBUG main org.hibernate.cfg.Configuration - processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - processing association property references
DEBUG main org.hibernate.cfg.Configuration - processing foreign key constraints
DEBUG main org.hibernate.cfg.Configuration - Legacy Validator not present in classpath, ignoring event listener registration
DEBUG main org.hibernate.cfg.search.HibernateSearchEventListenerRegister - Search not present in classpath, ignoring event listener registration.
INFO main org.hibernate.cfg.search.HibernateSearchEventListenerRegister - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
INFO main org.hibernate.connection.ConnectionProviderFactory - Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
INFO main org.hibernate.dialect.Dialect - Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
INFO main org.hibernate.cfg.SettingsFactory - Database ->
       name : MySQL
    version : 5.6.11
      major : 5
      minor : 6
INFO main org.hibernate.cfg.SettingsFactory - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.16 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
INFO main org.hibernate.transaction.TransactionFactoryFactory - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
INFO main org.hibernate.transaction.TransactionManagerLookupFactory - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
INFO main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
INFO main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
INFO main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
INFO main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
INFO main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
INFO main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
INFO main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
INFO main org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
INFO main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
INFO main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
INFO main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
INFO main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
INFO main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.ast.ASTQueryTranslatorFactory - Using ASTQueryTranslatorFactory
INFO main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
INFO main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
INFO main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
INFO main org.hibernate.cfg.SettingsFactory - Query cache: disabled
INFO main org.hibernate.cfg.SettingsFactory - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
INFO main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
INFO main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.exception.SQLExceptionConverterFactory - Using dialect defined converter
INFO main org.hibernate.cfg.SettingsFactory - Echoing all SQL to stdout
INFO main org.hibernate.cfg.SettingsFactory - Statistics: disabled
INFO main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
INFO main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
INFO main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
INFO main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
INFO main org.hibernate.impl.SessionFactoryImpl - building session factory
DEBUG main org.hibernate.impl.SessionFactoryImpl - Statistics initialized [enabled=false]}
DEBUG main org.hibernate.type.TypeFactory - Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@180b22e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@b32ed4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@b32ed4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b32ed4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1568fb5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dccedd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@a4488
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@70be88
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@70be88
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70be88
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@9a9b65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@9a9b65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9a9b65
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1712651
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1712651
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1712651
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@f07355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@f07355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f07355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@15983b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@15983b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@15983b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6835fb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6835fb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6835fb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f892a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f892a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f892a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10efd7c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10efd7c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@988707
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@988707
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1ab11b0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ab11b0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@52c6b4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@52c6b4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@b0a3f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b0a3f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1ac5f13
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ac5f13
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1493102
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1493102
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1493102
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ee1ede
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1236cd5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1236cd5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1236cd5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e41bc3
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1922f46
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1922f46
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e2670b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e2670b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@147358f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@147358f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@ded0f0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@ded0f0
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@da90c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@da90c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@124111a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@93df2c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3a1834
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3a1834
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3a1834
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f729e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f729e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f729e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@671f95
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1754699
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1754699
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1754699
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68cb6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68cb6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68cb6b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@dada24
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1f31652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f31652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11ef443
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@94af2f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@e34726
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e34726
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@46d228
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@e99681
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1be4777
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1d32e45
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@a53de4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a53de4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b05236
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e55794
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d8d237
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@146e381
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1024994
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12cd19d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1759d12
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9b2a51
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@edbe39
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@46d228
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@14e4e31
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [blob] overrides previous : org.hibernate.type.BlobType@1f31652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@14e4e31
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1f31652
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@639bf1
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@e99681
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@10980e7
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [clob] overrides previous : org.hibernate.type.ClobType@e34726
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10980e7
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@e34726
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ef7de4
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@11ef443
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1931579
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@1be4777
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3228a1
INFO main org.hibernate.type.BasicTypeRegistry - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@94af2f
DEBUG main org.hibernate.impl.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.impl.SessionFactoryImpl - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre6\bin, java.vm.version=16.3-b01, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\FanFou\gitRepository\repository\Common, java.runtime.version=1.6.0_20-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jre6\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\Jason\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jre6\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre6/bin/client;C:/Program Files/Java/jre6/bin;C:/Program Files/Java/jre6/lib/i386;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;d:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Broadcom\Broadcom 802.11\Driver;C:\Program Files\QuickTime\QTSystem\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;D:\Java\jdk1.6.0_21\bin;D:\Program Files\IDM Computer Solutions\UltraEdit\;d:\Program Files\Nmap;G:\FanFou\eclipse-jee-juno-SR2-win32\eclipse;, java.specification.name=Java Platform API Specification, java.class.version=50.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.1, user.home=C:\Users\Jason, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.6, java.class.path=G:\FanFou\gitRepository\repository\Common\bin;G:\FanFou\gitRepository\repository\Common\lib\aopalliance.jar;G:\FanFou\gitRepository\repository\Common\lib\aspectjweaver-1.6.12.jar;G:\FanFou\gitRepository\repository\Common\lib\mchange-commons-java-0.2.3.4.jar;G:\FanFou\gitRepository\repository\Common\lib\c3p0-0.9.2.1.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-logging-1.1.3.jar;G:\FanFou\gitRepository\repository\Common\lib\log4j-1.2.9.jar;G:\FanFou\gitRepository\repository\Common\lib\mysql-connector-java-5.1.16-bin.jar;G:\FanFou\gitRepository\repository\Common\lib\slf4j-api-1.7.5.jar;G:\FanFou\gitRepository\repository\Common\lib\slf4j-log4j12-1.7.5.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-aop-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-aspects-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-beans-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-context-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-context-support-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-core-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-data-commons-1.5.0.RELEASE.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-expression-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-instrument-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-jdbc-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-orm-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-tx-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\spring-web-4.0.0.M1.jar;G:\FanFou\gitRepository\repository\Common\lib\asm-3.3.jar;G:\FanFou\gitRepository\repository\Common\lib\asm-commons-3.3.jar;G:\FanFou\gitRepository\repository\Common\lib\asm-tree-3.3.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-fileupload-1.2.2.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-io-2.0.1.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-lang3-3.1.jar;G:\FanFou\gitRepository\repository\Common\lib\freemarker-2.3.19.jar;G:\FanFou\gitRepository\repository\Common\lib\ognl-3.0.6.jar;G:\FanFou\gitRepository\repository\Common\lib\struts2-core-2.3.14.jar;G:\FanFou\gitRepository\repository\Common\lib\xwork-core-2.3.14.jar;G:\FanFou\eclipse-jee-juno-SR2-win32\eclipse\plugins\org.junit_4.10.0.v4_10_0_v20120426-0900\junit.jar;G:\FanFou\eclipse-jee-juno-SR2-win32\eclipse\plugins\org.hamcrest.core_1.1.0.v20090501071000.jar;G:\FanFou\gitRepository\repository\Common\lib\dom4j-1.6.1.jar;G:\FanFou\gitRepository\repository\Common\lib\jboss-logging-3.1.0.GA.jar;G:\FanFou\gitRepository\repository\Common\lib\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-dbcp-1.4.jar;G:\FanFou\gitRepository\repository\Common\lib\hibernate-jpa-2.0-api-1.0.1.Final.jar;G:\FanFou\gitRepository\repository\Common\lib\antlr-2.7.6.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-collections-3.1.jar;G:\FanFou\gitRepository\repository\Common\lib\hibernate3.jar;G:\FanFou\gitRepository\repository\Common\lib\javassist-3.12.0.GA.jar;G:\FanFou\gitRepository\repository\Common\lib\jta-1.1.jar;G:\FanFou\gitRepository\repository\Common\lib\commons-pool-1.6.jar;/G:/FanFou/eclipse-jee-juno-SR2-win32/eclipse/configuration/org.eclipse.osgi/bundles/352/1/.cp/;/G:/FanFou/eclipse-jee-juno-SR2-win32/eclipse/configuration/org.eclipse.osgi/bundles/351/1/.cp/, user.name=Jason, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.0, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre6, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, java.specification.vendor=Sun Microsystems Inc., user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.6.0_20, java.ext.dirs=C:\Program Files\Java\jre6\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre6\lib\resources.jar;C:\Program Files\Java\jre6\lib\rt.jar;C:\Program Files\Java\jre6\lib\sunrsasign.jar;C:\Program Files\Java\jre6\lib\jsse.jar;C:\Program Files\Java\jre6\lib\jce.jar;C:\Program Files\Java\jre6\lib\charsets.jar;C:\Program Files\Java\jre6\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG main org.hibernate.id.factory.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQL5InnoDBDialect]
DEBUG main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@1ab11b0], incoming type = [org.hibernate.type.StringType@1ab11b0]
DEBUG main org.hibernate.persister.entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@f07355], incoming type = [org.hibernate.type.IntegerType@f07355]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.uf.fanfan.entity.Shop
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select id from SHOP where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select shop_.id, shop_.name as name0_ from SHOP shop_ where shop_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into SHOP (name, id) values (?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update SHOP set name=? where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from SHOP where id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into SHOP (name) values (?)
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [NONE]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [READ]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [UPGRADE]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=? for update
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [UPGRADE_NOWAIT]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=? for update
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [FORCE]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=? for update
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [PESSIMISTIC_READ]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=? lock in share mode
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [PESSIMISTIC_WRITE]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=? for update
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [PESSIMISTIC_FORCE_INCREMENT]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=? for update
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [OPTIMISTIC]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for entity com.uf.fanfan.entity.Shop [OPTIMISTIC_FORCE_INCREMENT]: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_MERGE on entity com.uf.fanfan.entity.Shop: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.loader.entity.EntityLoader - Static select for action ACTION_REFRESH on entity com.uf.fanfan.entity.Shop: select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
DEBUG main org.hibernate.impl.SessionFactoryObjectFactory - registered: 32525fd2-6487-440b-b217-f576fb96f0e1 (unnamed)
INFO main org.hibernate.impl.SessionFactoryObjectFactory - Not binding factory to JNDI, no JNDI name configured
DEBUG main org.hibernate.impl.SessionFactoryImpl - instantiated session factory
DEBUG main org.hibernate.impl.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG main org.hibernate.impl.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'shopDao' to bean named 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'shopDao'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'shopManagerService' to bean named 'shopDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'txAdvice'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.TransactionInterceptor]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'txAdvice' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.interceptor.TransactionInterceptor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.interceptor.TransactionInterceptor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSource' of type [org.springframework.transaction.interceptor.TransactionAttributeSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSources' of type [[Lorg.springframework.transaction.interceptor.TransactionAttributeSource;]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionAttributes' of type [java.util.Properties]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionManager' of type [org.springframework.transaction.PlatformTransactionManager]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionManagerBeanName' of type [java.lang.String]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.hibernate3.HibernateTransactionManager]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.hibernate3.HibernateTransactionManager]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'autodetectDataSource' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'defaultTimeout' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'earlyFlushBeforeCommit' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'entityInterceptor' of type [org.hibernate.Interceptor]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'entityInterceptorBeanName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'failEarlyOnGlobalRollbackOnly' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'globalRollbackOnParticipationFailure' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'hibernateManagedSession' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'jdbcExceptionTranslator' of type [org.springframework.jdbc.support.SQLExceptionTranslator]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'nestedTransactionAllowed' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'prepareConnection' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'resourceFactory' of type [java.lang.Object]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'rollbackOnCommitFailure' of type [boolean]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'sessionFactory' of type [org.hibernate.SessionFactory]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionSynchronization' of type [int]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'transactionSynchronizationName' of type [java.lang.String]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'validateExistingTransaction' of type [boolean]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
INFO main org.springframework.orm.hibernate3.HibernateTransactionManager - Using DataSource [org.apache.commons.dbcp.BasicDataSource@1add463] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean '(inner bean)'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'nameMap' of type [java.util.Map]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'properties' of type [java.util.Properties]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [get*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT,readOnly]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'txAdvice'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Creating implicit proxy for bean 'shopManagerService' with 0 common interceptors and 2 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.uf.fanfan.service.impl.ShopManagerServiceImpl@16b61c3]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'shopManagerService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tradeService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'tradeService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'tradeService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [com.uf.fanfan.service.impl.TradeServiceImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [com.uf.fanfan.service.impl.TradeServiceImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'tradeService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'productDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'productDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.uf.fanfan.dao.impl.ProductDaoImpl]: AutowiredFieldElement for private org.springframework.orm.hibernate3.HibernateTemplate com.uf.fanfan.dao.impl.CommonDaoImpl.hibernateTemplate
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'productDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.CachedIntrospectionResults - Getting BeanInfo for class [com.uf.fanfan.dao.impl.ProductDaoImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [com.uf.fanfan.dao.impl.ProductDaoImpl]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
DEBUG main org.springframework.beans.CachedIntrospectionResults - Found bean property 'hibernateTemplate' of type [org.springframework.orm.hibernate3.HibernateTemplate]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'productDao': AutowiredFieldElement for private org.springframework.orm.hibernate3.HibernateTemplate com.uf.fanfan.dao.impl.CommonDaoImpl.hibernateTemplate
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productDao' to bean named 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'productDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'shopDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'myDataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'hibernateTemplate'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txAdvice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.context.support.ClassPathXmlApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1cee792]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.context.support.ClassPathXmlApplicationContext - Publishing event in org.springframework.context.support.ClassPathXmlApplicationContext@13caecd: org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.context.support.ClassPathXmlApplicationContext@13caecd: startup date [Tue Aug 27 21:34:58 CST 2013]; root of context hierarchy]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - getProperty("spring.liveBeansView.mbeanDomain", String)
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
DEBUG main org.springframework.core.env.SystemEnvironmentPropertySource - PropertySource [systemEnvironment] does not contain 'spring.liveBeansView.mbeanDomain'
DEBUG main org.springframework.core.env.SystemEnvironmentPropertySource - PropertySource [systemEnvironment] does not contain 'spring_liveBeansView_mbeanDomain'
DEBUG main org.springframework.core.env.SystemEnvironmentPropertySource - PropertySource [systemEnvironment] does not contain 'SPRING.LIVEBEANSVIEW.MBEANDOMAIN'
DEBUG main org.springframework.core.env.SystemEnvironmentPropertySource - PropertySource [systemEnvironment] does not contain 'SPRING_LIVEBEANSVIEW_MBEANDOMAIN'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'shopManagerService'
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [com.uf.fanfan.service.impl.ShopManagerServiceImpl.findShopById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13776105001
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@1efc208] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1efc208]
DEBUG main org.hibernate.transaction.JDBCTransaction - begin
DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG main org.hibernate.jdbc.JDBCContext - after transaction begin
DEBUG main org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://127.0.0.1:3306/fanfan, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@1a73d30] for key [org.apache.commons.dbcp.BasicDataSource@1add463] to thread [main]
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Bound value [org.springframework.orm.hibernate3.SessionHolder@a22671] for key [org.hibernate.impl.SessionFactoryImpl@180b22e] to thread [main]
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Initializing transaction synchronization
DEBUG main org.springframework.transaction.interceptor.TransactionInterceptor - Getting transaction for [com.uf.fanfan.service.impl.ShopManagerServiceImpl.findShopById]
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.hibernate3.SessionHolder@a22671] for key [org.hibernate.impl.SessionFactoryImpl@180b22e] bound to thread [main]
DEBUG main org.springframework.transaction.support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.hibernate3.SessionHolder@a22671] for key [org.hibernate.impl.SessionFactoryImpl@180b22e] bound to thread [main]
DEBUG main org.springframework.orm.hibernate3.HibernateTemplate - Found thread-bound Session for HibernateTemplate
DEBUG main org.hibernate.event.def.DefaultLoadEventListener - loading entity: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.event.def.DefaultLoadEventListener - attempting to resolve: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.event.def.DefaultLoadEventListener - object not resolved in any cache: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Fetching entity: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.loader.Loader - loading entity: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG main org.hibernate.SQL - select shop0_.id as id0_0_, shop0_.name as name0_0_ from SHOP shop0_ where shop0_.id=?
DEBUG main org.hibernate.jdbc.AbstractBatcher - preparing statement
DEBUG main org.hibernate.type.descriptor.sql.BasicBinder - binding parameter [1] as [INTEGER] - 0
DEBUG main org.hibernate.loader.Loader - Bound [2] parameters total
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
DEBUG main org.hibernate.loader.Loader - processing result set
DEBUG main org.hibernate.loader.Loader - result set row: 0
DEBUG main org.hibernate.loader.Loader - result row: EntityKey[com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.loader.Loader - Initializing object from ResultSet: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Hydrating entity: [com.uf.fanfan.entity.Shop#0]
DEBUG main org.hibernate.type.descriptor.sql.BasicExtractor - found [fanfan] as column [name0_0_]
DEBUG main org.hibernate.loader.Loader - done processing result set (1 rows)
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
